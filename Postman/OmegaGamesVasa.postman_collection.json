{
	"info": {
		"_postman_id": "86753adc-382c-4d1d-b2b4-8899c5ed7025",
		"name": "OmegaGamesVasa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7374966"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is array\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Product contains correct fields\", function () {\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('id');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('productName');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('description');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('price');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('category');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('stock');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('image');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('genre');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('ageRestriction');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseAddress}}/products",
							"host": [
								"{{baseAddress}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "GetAllOrders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is array\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Order contains correct fields\", function () {\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerCart');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerId');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerEmail');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerAddress');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerFirstName');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerLastName');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('customerPhone');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('orderDate');\r",
									"    pm.expect(pm.response.json()[0]).to.have.property('totalPrice');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseAddress}}/orders",
							"host": [
								"{{baseAddress}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a.string;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": null,\r\n        \"customerCart\": [\r\n            {\r\n                \"id\": 1,\r\n                \"productName\": \"Helldivers II\",\r\n                \"description\": \"The Galaxyâ€™s Last Line of Offence. Enlist in the Helldivers and join the fight for freedom across a hostile galaxy in a fast, frantic, and ferocious third-person shooter.\",\r\n                \"price\": 500,\r\n                \"category\": \"Games\",\r\n                \"image\": \"https://teamvasastorage.blob.core.windows.net/images/helldivers2-small.jpg\",\r\n                \"genre\": \"third-person shooter\",\r\n                \"ageRestriction\": 18,\r\n                \"productKey\": \"1234\"\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"productName\": \"Counter-Strike 2\",\r\n                \"description\": \"For over two decades, Counter-Strike has offered an elite competitive experience, one shaped by millions of players from across the globe. And now the next chapter in the CS story is about to begin. This is Counter-Strike 2.\",\r\n                \"price\": 200,\r\n                \"category\": \"Games\",\r\n                \"image\": \"https://teamvasastorage.blob.core.windows.net/images/counterstrike2-small.jpg\",\r\n                \"genre\": \"FPS\",\r\n                \"ageRestriction\": 18,\r\n                \"productKey\": \"12345\"\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"productName\": \"Dragons Dogma 2\",\r\n                \"description\": \"Dragons Dogma 2 is a single player, narrative driven action-RPG that challenges the players to choose their own experience\",\r\n                \"price\": 700,\r\n                \"category\": \"Games\",\r\n                \"image\": \"https://teamvasastorage.blob.core.windows.net/images/dragonsdogma2-small.jpg\",\r\n                \"genre\": \"FPS\",\r\n                \"ageRestriction\": 18,\r\n                \"productKey\": \"123456\"\r\n            }\r\n        ],\r\n        \"customerId\": 0,\r\n        \"customerEmail\": \"test@example.com\",\r\n        \"customerAddress\": \"Dummy address\",\r\n        \"customerFirstName\": \"Postman\",\r\n        \"customerLastName\": \"Testsson\",\r\n        \"customerPhone\": \"123456\",\r\n        \"orderDate\": \"2024-04-19T08:00:00.172Z\",\r\n        \"totalPrice\": 1400\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseAddress}}/orders",
							"host": [
								"{{baseAddress}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host.development",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port.development",
			"value": "7092",
			"type": "string"
		},
		{
			"key": "baseAddress",
			"value": "http://localhost:5137",
			"type": "string",
			"disabled": true
		}
	]
}