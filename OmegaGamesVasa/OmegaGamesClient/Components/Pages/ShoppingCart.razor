@page "/ShoppingCart"
@using OmegaGamesAPI.Services
@using Common.DTO
@using System.Runtime.InteropServices
@using OmegaGamesClient.Components.Account.Pages
@rendermode InteractiveServer
@inject CustomerService customerService
@inject NavigationManager NavigationManager


<div class="shopping-cart-image">
</div>
@* 
@if (message != null)
{
    <p>@message</p>

}
else
{
    <div class="container text-center product-container">
        <div class="row justify-content-center mb-5 mt-5">
            @foreach (var Product in Products.DistinctBy(p => p.Id))
            {
                <div class="card shadow-sm col-md-3 col-sm-6 m-2 product-card">
                    <img class="card-img-top" src="@Product.Image" alt="@Product.ProductName">
                    <div class="card-body">
                        <h4 class="card-title">@Product.ProductName</h4>
                        <div class="card-text product-price">@Product.Price kr</div>
                    </div>
                    <div class="card-footer">
                        <label>Amount</label>
                        <div class="input-group">
                            <button class="btn btn-primary btn-outline-secondary" type="button" @onclick="() => IncrementAmount(Product)">+</button>
                            <textarea class="amount-box" disabled="true">@Products.Count(p => p.Id == Product.Id)</textarea>
                            <button class="btn btn-primary btn-outline-secondary" type="button" @onclick="() => DecrementAmount(Product)">-</button>
                        </div>
                        <button type="button" class="btn btn-primary" @onclick="() => RemoveAllFromCart(Product)">Ta bort från kundvagn</button>
                    </div>
                </div>
            }
        </div>
        <div class="justify-content-center mt-5">
            <div class="text-center pt-5">
                <label>Cart total</label>
                <textbox disabled="true">
                    @Math.Round(@price, 2)
                </textbox>
            </div>
            <div class="row text-center mb-5">
                <button type="button" class="btn btn-primary" @onclick="() => ClearCart()">Clear Cart</button>
                <button type="button" class="btn btn-primary" @onclick="() => GotoCheck()">Go to checkout</button>
            </div>
        </div>
    </div>
    SHIPPING
}
 *@
@* Shopping cart in progress Patriks fåfänga projekt*@

    <section class="h-100 h-custom shoppingcart-opacity pt-5" >
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12">
                    <div class="card card-registration card-registration-2" style="border-radius: 15px;">
                        <div class="card-body p-0">
                            <div class="row g-0">
                                <div class="col-lg-8">
                                    <div class="p-5">
                                        <div class="d-flex justify-content-between align-items-center mb-5">
                                            <h1 class="fw-bold mb-0 text-black">Kundvagn</h1>
                                            
                                        </div>
                                        <hr class="my-4">
                                        @foreach (var product in Products.DistinctBy(p => p.Id))
                                        {


                                            <div class="row mb-4 d-flex justify-content-between align-items-center">
                                                <div class="col-md-2 col-lg-2 col-xl-2">
                                                    <img src="@product.Image"
                                                         class="img-fluid rounded-3" alt="Cotton T-shirt">
                                                </div>
                                                <div class="col-md-3 col-lg-3 col-xl-3">
                                                    <h6 class="text-muted">@product.ProductName</h6>
                                                    <h6 class="text-black mb-0">@product.Category</h6>
                                                </div>
                                                <div class="col-md-3 col-lg-3 col-xl-2 d-flex m-6">
                                                    <button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2 btn-primary"
                                                            @onclick="() => DecrementAmount(product)">
                                                        <i class="fas fa-minus">-</i>
                                                    </button>

                                                    <input id="form1" min="0" name="quantity" text="bold" disabled="true" value="@Products.Count(p => p.Id == product.Id)" type="number"
                                                           class="form-control form-control-sm text-center" />

                                                    <button data-mdb-button-init data-mdb-ripple-init class="btn btn-link px-2 btn-primary"
                                                            @onclick="() => IncrementAmount(product)">
                                                        <i class="fas fa-plus ">+</i>
                                                    </button>
                                                </div>

                                                <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                                                    <h6 class="mb-0">@product.Price kr</h6>
                                                </div>
                                                <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                    <a href="#!" class="text-muted"><i class="fas fa-times"></i></a>
                                                </div>
                                            </div>
                                        }

                                        <hr class="my-4">

                                        <div class="pt-5">
                                            <h6 class="mb-0">
                                                <a href="/Products" class="text-body">
                                                    <i class="fas fa-long-arrow-alt-left me-2"></i>Back to shop
                                                </a>
                                            </h6>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 bg-grey">
                                    <div class="p-5">
                                        <h3 class="fw-bold mb-5 mt-2 pt-1">Summary</h3>
                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-4">
                                        <h5 class="text-uppercase">Antal: @Products.Count</h5>
                                            <h5>@price kr</h5>
                                        </div>

                                        <h5 class="text-uppercase mb-3">Frakt</h5>

                                        <div class="mb-4 pb-2">
                                            <select class="select">
                                                <option value="1">Hämta hos Börje</option>
                                                <option value="2">Bring</option>
                                                <option value="3">PostNord</option>
                                                <option value="4">Drönare</option>
                                            </select>
                                        </div>

                                        <h5 class="text-uppercase mb-3">Värdekod</h5>

                                        <div class="mb-5">
                                            <div data-mdb-input-init class="form-outline">
                                                <input type="text" id="form3Examplea2" disabled="true" class="form-control form-control-lg" />
                                            <label class="form-label" for="form3Examplea2">Ange rabattkod</label>
                                            </div>
                                        </div>

                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-5">
                                            <h5 class="text-uppercase">Totalt pris</h5>
                                            <h5>@price kr</h5>
                                        </div>

                                        @* <button type="button" data-mdb-button-init data-mdb-ripple-init class="btn btn-dark btn-block btn-lg"
                                                data-mdb-ripple-color="dark">
                                            Register
                                        </button> *@
                                        <button type="button" data-mdb-button-init data-mdb-ripple-init class="btn btn-dark btn-block btn-lg"
                                                data-mdb-ripple-color="dark" @onclick="() => ClearCart()">
                                            Töm varukorg
                                        </button>
                                        <button type="button" data-mdb-button-init data-mdb-ripple-init class="btn btn-dark btn-block btn-lg"
                                                data-mdb-ripple-color="dark" @onclick="() => GotoCheck()">
                                            Gå till kassan
                                        </button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>



@code {
    private List<ProductDTO> Products { get; set; } = new();

    private string message;

    private double price;

    protected override async Task OnInitializedAsync()
    {
        if (customerService.Customer.Cart.Count == 0)
        {
            message = "Your cart is empty";
        }
        else
        {
            Products.AddRange(await customerService.GetShoppingCart());

        }
        CalculateTotalCost();
    }

    private async Task DecrementAmount(ProductDTO product)
    {
        await RemoveOneFromCart(product);
    }

    private async Task IncrementAmount(ProductDTO product)
    {
        await UpdateCart(product);
    }

    private async Task UpdateCart(ProductDTO product)
    {
        await customerService.AddToCart(product);
        Products.Clear();
        Products.AddRange(await customerService.GetShoppingCart());
        CalculateTotalCost();
    }

    private async Task RemoveAllFromCart(ProductDTO product)
    {
        while (Products.Exists(p => p.Id == product.Id))
        {
            var selectedProduct = Products.FirstOrDefault(p => p.Id == product.Id);
            await customerService.RemoveFromCart(selectedProduct);
            Products.Remove(selectedProduct);
        }
        Products.Clear();
        Products.AddRange(await customerService.GetShoppingCart());
        CalculateTotalCost();

        if (customerService.Customer.Cart.Count == 0)
        {
            message = "Your cart is empty";
            price = 0;
        }
    }

    private async Task RemoveOneFromCart(ProductDTO product)
    {
        await customerService.RemoveFromCart(product);
        Products.Clear();
        Products.AddRange(await customerService.GetShoppingCart());
        CalculateTotalCost();

        if (customerService.Customer.Cart.Count == 0)
        {
            message = "Your cart is empty";
            price = 0;
        }
    }

    private void CalculateTotalCost()
    {
        price = Products.Sum(item => item.Price);
    }

    private async Task ClearCart()
    {
        await customerService.ClearCart();
        Products.Clear();
        price = 0;
        message = "Your cart is empty";
    }

    private void GotoCheck()
    {
        NavigationManager.NavigateTo("/OrderPage");
    }
}