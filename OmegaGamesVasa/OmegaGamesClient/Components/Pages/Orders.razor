@page "/Orders"
@using OmegaGamesAPI.Services
@using Common.DTO
@using Common.Interface
@rendermode InteractiveServer
@inject IOrderRepository<OrderDTO> OrderService


<h3 class="d-flex justify-content-center">All Orders</h3>

<div class="container text-center product-container">
    <ul class="list-group mt-5">
        @foreach (var order in AllOrders)
        {
            <div class="card text-center">
                <div class="card-header">
                    Ordernumber: @order.Id
                </div>
                <div class="card-body">
                    <h5>CustomerId: @order.CustomerId</h5>
                    <p>
                        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                            Button with data-target
                        </button>
                    </p>
                    <div class="collapse" id="collapseExample">
                        <div class="card card-body">
                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.
                        </div>
                    </div>
                </div>
                <div class="card-footer text-muted">
                    Orderdate: @order.OrderDate
                </div>
            </div>
        }
    </ul>
</div>



@code {
    public List<OrderDTO> AllOrders { get; set; } = new();

    override protected async Task OnInitializedAsync()
    {
        AllOrders.AddRange(await OrderService.GetAllOrders());
    }

}